library("dplyr")
library("ggplot")
library("maps")
library("tidyr")
library("maptools")
library("sp")
library("shiny")
pneuomnia.vs.all <- deaths %>% filter(year > 2009) %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths")
library("dplyr")
library("ggplot")
library("maps")
library("tidyr")
library("sp")
library("shiny")
##########################
# DATA WRANGLING SECTION #
##########################
#Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/population_info.csv', stringsAsFactors = FALSE)
pneuomnia.vs.all <- deaths %>% filter(year > 2009) %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths")
pneuomnia.vs.all <- deaths %>% filter(year > 2009) %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths")
pneuomnia.vs.all <- deaths %>% filter(year > 2009) %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths")
pneuomnia.vs.all <- deaths %>% filter("year" > 2009) %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths")
View(pneuomnia.vs.all)
View(pneuomnia.vs.all)
pneuomnia.vs.all <- deaths %>% filter("year" > 2009) %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "year")
pneuomnia.vs.all <- deaths %>% filter("Year" > 2009) %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "year")
pneuomnia.vs.all <- deaths %>% filter("Year" > 2009) %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "Year")
View(pne)
View(pneuomnia.vs.all)
View(pneuomnia.vs.all)
pneuomnia.vs.all <- deaths %>% filter("Year" > 2009) %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "Year" > 2009)
pneuomnia.vs.all <- deaths %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "Year" > 2009)
%>% filter("Year" > 2009)
pneuomnia.vs.all <- deaths %>%
select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "Year" > 2009)
pneuomnia.vs.all <- deaths %>% select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "Year" > 2009)
pneuomnia.vs.all <- deaths %>% select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths")
%>% filter("Year" > 2009)
pneuomnia.vs.all <- deaths %>% select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "Year")
%>% filter("Year" > 2009)
pneuomnia.vs.all <- deaths %>% select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "Year") %>%
filter("Year" > 2009)
pneuomnia.vs.all <- deaths %>% select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "Year") %>%
filter("Year" > 2009)
View(pneuomnia.vs.all)
View(pneuomnia.vs.all)
pneuomnia.vs.all <- filter("Year" > 2009) %>%
deaths %>% select("City", "Pneumonia.and.Influenza.Deaths", "All.Deaths", "Year")
pneuomnia.vs.all <- deaths %>% select(City, Pneumonia.and.Influenza.Deaths, All.Deaths, Year) %>%
filter(Year > 2009)
View(pneuomnia.vs.all)
View(pneuomnia.vs.all)
View(pneuomnia.vs.all)
View(pneuomnia.vs.all)
pneuomnia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
View(pneuomnia.vs.all)
View(pneuomnia.vs.all)
`colnames<-`(population, NAME <- city)
colnames(population[,9] City)
colnames(population[9] <- City)
colnames(population[9]) <- City
colnames(population[9]) <- "City"
View(population)
View(population)
population2 <- colnames(population[9]) <- "City"
View(population2)
population2 <- colnames(population[,9]) <- "City"
View(population2)
rename(population, NAME = City)
rename(population, "NAME" = "City")
colnames(population)[9] <- "City"
View(population)
View(population)
?spread
library("ggplot2")
View(population)
View(population)
colnames(population)[13:19] <- 2010:2016
View(population)
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, 2010, 2011, 2012,
2013, 2014, 2015, 2016
)
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016"
)
View(estimate.long)
View(estimate.long)
city.join <- inner_join(pneumonia.vs.all, estimate.long)
city.join <- inner_join(pneumonia.vs.all, estimate.long, by = "City")
View(estimate.long)
View(estimate.long)
city.join <- inner_join(pneumonia.vs.all, estimate.long, "City" = "City")
city.join <- inner_join(pneumonia.vs.all, estimate.long, "City" == "City")
city.join <- inner_join(pneumonia.vs.all, estimate.long, by("City" == "City"))
# Creating a new dataframe with the needed columns for analysis.
pneuomnia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
city.join <- inner_join(pneumonia.vs.all, estimate.long, by("City" == "City"))
city.join <- inner_join(pneuomnia.vs.all, estimate.long, by("City" == "City"))
city.join <- inner_join(pneuomnia.vs.all, estimate.long, by = "City")
View(city.join)
city.join <- inner_join(pneuomnia.vs.all, estimate.long, by = "City", by = "Year")
city.join <- inner_join(pneuomnia.vs.all, estimate.long, by = "City")
View(city.join)
city.join <- full_join(pneuomnia.vs.all, estimate.long, by = "City")
View(city.join)
city.join <- inner_join(pneuomnia.vs.all, estimate.long, by = c("City", "Year"))
# Making a new dataframe that joins by city
city.join <- inner_join(pneuomnia.vs.all, estimate.long, by = "Year")
View(pneuomnia.vs.all)
View(pneuomnia.vs.all)
# Making a new dataframe that joins by city
city.join <- inner_join(pneuomnia.vs.all, estimate.long, by = "City")
View(city.join)
lowest.and.highest <- pneuomnia.vs.all %>% filter(all.deaths = max)
lowest.and.highest <- pneuomnia.vs.all %>% filter(all.deaths = max(all.deaths)
)
lowest.and.highest <- pneuomnia.vs.all %>% filter(all.deaths == max(all.deaths)
)
lowest.and.highest <- pneuomnia.vs.all %>% filter(All.Deaths == max(All.Deaths))
View(lowest.and.highest)
View(lowest.and.highest)
lowest.and.highest <- pneuomnia.vs.all %>% filter(max == All.Deaths))
lowest.and.highest <- range(pneuomnia.vs.all$All.Deaths)
View(lowest.and.highest)
lowest.and.highest <- range(deaths$All.Deaths)
View(lowest.and.highest)
max(pneuomnia.vs.all$All.Deaths)
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/population_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016"
)
# Making a new dataframe that joins by city
city.join <- inner_join(pneumonia.vs.all, estimate.long, by = "City")
View(city.join)
lowest.and.highest <- filter(pneumonia.vs.all, All.Deaths == Max
)
max(pneuomnia.vs.all$All.Deaths)
max(pneumonia.vs.all[,9])
library("dplyr")
library("ggplot")
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
##########################
# DATA WRANGLING SECTION #
##########################
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/population_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
# Spreading of years in "population" dataframe.
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016"
)
# Making a new dataframe that joins by city
city.join <- inner_join(pneumonia.vs.all, estimate.long, by = "City")
View(city.join)
# Filtering for lowest and highest death rates
lowest.and.highest <- filter(pneumonia.vs.all, All.Deaths == Max
)
max(pneuomnia.vs.all$All.Deaths)
max(pneumonia.vs.all[,9])
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
max(pneumonia.vs.all[,9])
View(pneumonia.vs.all)
View(pneumonia.vs.all)
max(pneumonia.vs.all[,5])
range <- range(pneumonia.vs.all$all.years
range <- range(pneumonia.vs.all$all.years)
range <- range(pneumonia.vs.all$All.Deaths)
View(range)
range <- range(pneumonia.vs.all$All.Deaths, na.rm = TRUE)
View(range)
group_by(pneumonia.vs.all, "Year")
range <- range(groupedyears$All.Deaths, na.rm = TRUE)
groupedyears <- group_by(pneumonia.vs.all, "Year")
range <- range(groupedyears$All.Deaths, na.rm = TRUE)
View(range)
deaths.2010 <- filter(year = 2010)
deaths.2010 <- filter(pneumonia.vs.all, year = 2010)
deaths.2010 <- filter(pneumonia.vs.all, year == 2010)
deaths.2010 <- filter(pneumonia.vs.all, Year == 2010)
View(deaths.2010)
View(deaths.2010)
deaths.2011 <- filter(pneumonia.vs.all, Year == 2011)
deaths.2014 <- filter(pneumonia.vs.all, Year == 2014)
deaths.2015 <- filter(pneumonia.vs.all, Year == 2015)
deaths.2010 <- filter(pneumonia.vs.all, Year == 2010)
deaths.2011 <- filter(pneumonia.vs.all, Year == 2011)
deaths.2012 <- filter(pneumonia.vs.all, Year == 2012)
deaths.2013 <- filter(pneumonia.vs.all, Year == 2013)
deaths.2014 <- filter(pneumonia.vs.all, Year == 2014)
deaths.2015 <- filter(pneumonia.vs.all, Year == 2015)
deaths.2016 <- filter(pneumonia.vs.all, Year == 2016)
range.2010 <- range(deaths.2010$All.Deaths, na.rm = TRUE)
View(range)
View(range.2010)
print(range.2010)
range.2010 <- filter(deaths.2010$All.Deaths = max(deaths.2010))
range.2010 <- filter(deaths.2010$All.Deaths = max(deaths.2010$All.Deaths))
range.2010 <- filter(deaths.2010$All.Deaths == max(deaths.2010$All.Deaths))
range.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths))
View(range.2010)
range.2010 <- deaths.2010 %>% filter(max(All.Deaths))
range.2010 <- deaths.2010 %>% filter(All.Deaths = max(All.Deaths))
range.2010 <- deaths.2010 %>% summarise(All.Deaths == max(All.Deaths))
range.2010 <- deaths.2010 %>% summarize(max = max(All.Deaths))
View(range.2010)
range.2010 <- deaths.2010 %>% summarize(max = max(All.Deaths, na.rm = TRUE),)
range.2010 <- deaths.2010 %>% summarize(max = max(All.Deaths, na.rm = TRUE))
View(range.2010)
range.2010 <- deaths.2010 %>% filter(max = max(All.Deaths, na.rm = TRUE))
range.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
View(range.2010)
range.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE), All.Deaths
== min(All.Deaths, na.rm = TRUE))
View(range.2010)
range.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE), All.Deaths == min(All.Deaths, na.rm = TRUE))
View(range.2010)
max.2010 <- deaths.2010 %>% filter(All.Deaths == range(All.Deaths, na.rm = TRUE))
View(range.2010)
max.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE)) %>%
filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
View(range.2010)
min.2010  deaths.2010 %>%  filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
min.2010 <- deaths.2010 %>%  filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
View(max.2010)
View(min.2010)
full_join(max.2010, min.2010)
maxmin.2010 <- full_join(max.2010, min.2010)
View(maxmin.2010)
View(estimate.long)
View(estimate.long)
estimates <- estimate.long %>% select(Year, City, STNAME, ESTIMATE)
View(estimates)
ui<- fluidPage(
titlePanel("Mortality Rates in the Unite States from 2010-2016")
)
shinyApp(ui, server)
server <- function(input, output){
}
shinyApp(ui, server)
View(cities)
# Getting the city names
cities <- pneumonia.vs.all$City
View(cities)
# Getting the city names
cities <- unique(pneumonia.vs.all$City)
View(cities)
runApp()
runApp()
runApp()
runApp()
runApp()
library("dplyr")
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
##########################
# DATA WRANGLING SECTION #
##########################
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/population_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Getting the city names
cities <- unique(pneumonia.vs.all$City)
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
# Spreading of years in "population" dataframe.
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016")
estimates <- estimate.long %>% select(Year, City, STNAME, ESTIMATE)
# Making a new dataframe that joins by city
city.join <- inner_join(pneumonia.vs.all, estimate.long, by = "City")
# Filtering for lowest and highest death rates
deaths.2010 <- filter(pneumonia.vs.all, Year == 2010)
deaths.2011 <- filter(pneumonia.vs.all, Year == 2011)
deaths.2012 <- filter(pneumonia.vs.all, Year == 2012)
deaths.2013 <- filter(pneumonia.vs.all, Year == 2013)
deaths.2014 <- filter(pneumonia.vs.all, Year == 2014)
deaths.2015 <- filter(pneumonia.vs.all, Year == 2015)
deaths.2016 <- filter(pneumonia.vs.all, Year == 2016)
# Max & Min Deaths for each year
#2010
max.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2010 <- deaths.2010 %>%  filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2010 <- full_join(max.2010, min.2010)
# 2011
max.2011 <- deaths.2011 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2011 <- deaths.2011 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2011 <- full_join(max.2011, min.2011)
# 2012
max.2012 <- deaths.2012 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2012 <- deaths.2012 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2012 <- full_join(max.2012, min.2012)
# 2013
max.2013 <- deaths.2013 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2013 <- deaths.2013 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2013 <- full_join(max.2013, min.2013)
# 2014
max.2014 <- deaths.2014 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2014 <- deaths.2014 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2014 <- full_join(max.2014, min.2014)
# 2015
max.2012 <- deaths.2015 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2012 <- deaths.2015 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2012 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2016 <- deaths.2016 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2016 <- full_join(max.2016, min.2016)
# Which age/year group had the most deaths combined?
# UI Code
ui<- fluidPage(
titlePanel("Mortality Rates in the Unite States from 2010-2016"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = 'city',
label = 'Cities',
choices = cities
),
radioButtons(
inputId = "age",
label = "Age Range",
choices = 1
)
)
),
mainPanel(tabsetPanel(
))
)
# Server Code
server <- function(input, output){
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# 2015
max.2015 <- deaths.2015 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2015 <- deaths.2015 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2015 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
library("dplyr")
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
##########################
# DATA WRANGLING SECTION #
##########################
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/population_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Getting the city names
cities <- unique(pneumonia.vs.all$City)
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
# Spreading of years in "population" dataframe.
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016")
estimates <- estimate.long %>% select(Year, City, STNAME, ESTIMATE)
# Making a new dataframe that joins by city
city.join <- inner_join(pneumonia.vs.all, estimate.long, by = "City")
# Filtering for lowest and highest death rates
deaths.2010 <- filter(pneumonia.vs.all, Year == 2010)
deaths.2011 <- filter(pneumonia.vs.all, Year == 2011)
deaths.2012 <- filter(pneumonia.vs.all, Year == 2012)
deaths.2013 <- filter(pneumonia.vs.all, Year == 2013)
deaths.2014 <- filter(pneumonia.vs.all, Year == 2014)
deaths.2015 <- filter(pneumonia.vs.all, Year == 2015)
deaths.2016 <- filter(pneumonia.vs.all, Year == 2016)
# Max & Min Deaths for each year
#2010
max.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2010 <- deaths.2010 %>%  filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2010 <- full_join(max.2010, min.2010)
# 2011
max.2011 <- deaths.2011 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2011 <- deaths.2011 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2011 <- full_join(max.2011, min.2011)
# 2012
max.2012 <- deaths.2012 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2012 <- deaths.2012 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2012 <- full_join(max.2012, min.2012)
# 2013
max.2013 <- deaths.2013 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2013 <- deaths.2013 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2013 <- full_join(max.2013, min.2013)
# 2014
max.2014 <- deaths.2014 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2014 <- deaths.2014 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2014 <- full_join(max.2014, min.2014)
# 2015
max.2015 <- deaths.2015 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2015 <- deaths.2015 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2015 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2016 <- deaths.2016 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2016 <- full_join(max.2016, min.2016)
# Which age/year group had the most deaths combined?
# UI Code
ui<- fluidPage(
titlePanel("Mortality Rates in the Unite States from 2010-2016"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = 'city',
label = 'Cities',
choices = cities
),
radioButtons(
inputId = "age",
label = "Age Range",
choices = 1
)
))
)
mainPanel(tabsetPanel(
tabsetPanel(
id = "tabset",
type = "tabs",
tabPanel("Background Information", textOutput("BackInfo")),
tabPanel("Table", tableOutput("table"))
)
))
# Server Code
server <- function(input, output){
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Getting the city names
cities <- order(unique(pneumonia.vs.all$City))
View(cities)
View(deaths)
infants <- deaths %>% group_by(Year)
View(infants)
infants <- deaths %>% filter(Year > 2009) %>% group_by(Year)
View(infants)
age.groups <- deaths %>% filter(Year > 2009) %>% group_by(Year)
View(age.groups)
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
View(age.groups)
colnames(age.groups)[9:13] <- c(" < 1", "1-24", "25-44", "45-64", "65+")
colnames(age.groups)[9:13] <- c(" <1", "1-24", "25-44", "45-64", "65+")
colnames(age.groups)[9:13] <- c(" <1", "1-24", "25-44", "45-64", "65+")
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
