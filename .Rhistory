ungroup(City) %>%
filter(Mortality.Rate == min(Mortality.Rate))
View(max.2015)
min.2015 <- deaths.2015 %>%
group_by(City) %>%
filter(WEEK == 1) %>%
na.omit() %>%
select(Year.x, City, STNAME, Mortality.Rate) %>%
ungroup(City) %>%
filter(Mortality.Rate == min(Mortality.Rate))
View(min.2015)
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
library("plotly")
##########################
# DATA WRANGLING SECTION #
##########################
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/census_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Getting the city names
cities <- (unique(pneumonia.vs.all$City))
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
# Spreading of years in "population" dataframe.
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016")
estimates <- estimate.long %>% select(Year, City, STNAME, ESTIMATE)
# Making a new dataframe that joins by city
city.join <- left_join(pneumonia.vs.all, estimate.long, by = "City")
city.population <- city.join %>% filter(Year.x == Year.y)
city.names <- unique(city.population$City)
city.range <- range(city.population$Year.x)
city.population <- mutate(city.population, "Pneumonia.and.Influenza.Ratio" =
paste0(Pneumonia.and.Influenza.Deaths /
All.Deaths * 100, "%" ))
# Filtering for lowest and highest death rates
pneumonia.deaths <- city.population %>% select(Year.x, WEEK, City,
Pneumonia.and.Influenza.Deaths,
All.Deaths, STNAME, ESTIMATE,
Pneumonia.and.Influenza.Ratio)
deaths.2010 <- pneumonia.deaths %>% filter(Year.x == 2010) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2011 <- pneumonia.deaths %>% filter(Year.x == 2011) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2012 <- pneumonia.deaths %>% filter(Year.x == 2012) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2013 <- pneumonia.deaths %>% filter(Year.x == 2013) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2014 <- pneumonia.deaths %>% filter(Year.x == 2014) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2015 <- pneumonia.deaths %>% filter(Year.x == 2015) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
# Max & Min Deaths for each year
#2010
max.2010 <- deaths.2010 %>% group_by(City) %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2010 <- deaths.2010 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2010 <- full_join(max.2010, min.2010)
# 2011
max.2011 <- deaths.2011 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2011 <- deaths.2011 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2011 <- full_join(max.2011, min.2011)
# 2012
max.2012 <- deaths.2012 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2012 <- deaths.2012 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2012 <- full_join(max.2012, min.2012)
# 2013
max.2013 <- deaths.2013 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2013 <- deaths.2013 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2013 <- full_join(max.2013, min.2013)
# 2014
max.2014 <- deaths.2014 %>% group_by(City) %>% filter(Mortality.Rate ==
max(Mortality.Rate,
na.rm = TRUE))
min.2014 <- deaths.2014 %>% group_by(City) %>% filter(Mortality.Rate ==
min(Mortality.Rate,
na.rm = TRUE))
maxmin.2014 <- full_join(max.2014, min.2014)
>>>>>>> e4f6ffa2c71e7f09353297c25445cfb35dd434bc
# 2015
max.2015 <- deaths.2015 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2015 <- deaths.2015 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2015 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2016 <- deaths.2016 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2016 <- full_join(max.2016, min.2016)
# Which age/year group had the most deaths combined?
age.groups <- deaths %>% filter(Year > 2009) %>% group_by(Year)
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
age.group <- gather(age.groups,
key = age.group,
value = agegroup.deaths, "<1", "1-24", "25-44", "45-64", "65+")
age.ranges <- unique(age.group$age.group)
ages.2010 <- age.group %>% filter(Year == 2010) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2011 <- age.group %>% filter(Year == 2011) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2012 <- age.group %>% filter(Year == 2012) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2013 <- age.group %>% filter(Year == 2013) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2014 <- age.group %>% filter(Year == 2014) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2015 <- age.group %>% filter(Year == 2015) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2016 <- age.group %>% filter(Year == 2016) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
first.ages <- age.group %>% filter(age.group == '<1') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
second.ages <- age.group %>% filter(age.group == '1-24') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
third.ages <- age.group %>% filter(age.group == '25-44') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
fourth.ages <- age.group %>% filter(age.group == '45-64') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
fifth.ages <- age.group %>% filter(age.group == '65+') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
# UI Code
ui<- fluidPage(
titlePanel("Mortality Rates in the United States from 2010-2016"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = 'year', label = 'Year', min = 2010,
max = 2016, value = 2010),
selectInput(
inputId = 'city',
label = 'Cities',
choices = cities
),
radioButtons(
inputId = "age",
label = "Age Range",
choices = age.ranges
)
),
mainPanel(
tabsetPanel(
id = "tabset",
type = "tabs",
tabPanel("Background Information", htmlOutput("heading"), textOutput("BackInfo"), plotlyOutput("plot")),
tabPanel("Pneumonia and Influenza Deaths", htmlOutput('table.header'), textOutput('table.text'),tableOutput("table")),
tabPanel( "Map", plotlyOutput("plot")),
verbatimTextOutput("country.info"),
tabPanel("Deaths by city", tableOutput("CityDeaths")),
tabPanel("Deaths by city Map", plotOutput("CityDeathsMap")),
tabPanel("Age Group Deaths", tableOutput("AgeGroup")),
tabPanel("Age Groups Trends", plotOutput("Trends")),
tabPanel("Age Groups Bar Graphs", plotOutput("Graphs"))
))
)
)
lowest.and.highest <- pneuomnia.vs.all %>% filter(All.Deaths == max(All.Deaths))
View(lowest.and.highest)
View(lowest.and.highest)
lowest.and.highest <- pneuomnia.vs.all %>% filter(max == All.Deaths))
lowest.and.highest <- range(pneuomnia.vs.all$All.Deaths)
View(lowest.and.highest)
lowest.and.highest <- range(deaths$All.Deaths)
View(lowest.and.highest)
max(pneuomnia.vs.all$All.Deaths)
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/population_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016"
)
# Making a new dataframe that joins by city
city.join <- inner_join(pneumonia.vs.all, estimate.long, by = "City")
View(city.join)
lowest.and.highest <- filter(pneumonia.vs.all, All.Deaths == Max
)
max(pneuomnia.vs.all$All.Deaths)
max(pneumonia.vs.all[,9])
library("dplyr")
library("ggplot")
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
##########################
# DATA WRANGLING SECTION #
##########################
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/population_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
# Spreading of years in "population" dataframe.
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016"
)
# Making a new dataframe that joins by city
city.join <- inner_join(pneumonia.vs.all, estimate.long, by = "City")
View(city.join)
# Filtering for lowest and highest death rates
lowest.and.highest <- filter(pneumonia.vs.all, All.Deaths == Max
)
max(pneuomnia.vs.all$All.Deaths)
max(pneumonia.vs.all[,9])
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
max(pneumonia.vs.all[,9])
View(pneumonia.vs.all)
View(pneumonia.vs.all)
max(pneumonia.vs.all[,5])
range <- range(pneumonia.vs.all$all.years
range <- range(pneumonia.vs.all$all.years)
range <- range(pneumonia.vs.all$All.Deaths)
View(range)
range <- range(pneumonia.vs.all$All.Deaths, na.rm = TRUE)
View(range)
group_by(pneumonia.vs.all, "Year")
range <- range(groupedyears$All.Deaths, na.rm = TRUE)
groupedyears <- group_by(pneumonia.vs.all, "Year")
range <- range(groupedyears$All.Deaths, na.rm = TRUE)
View(range)
deaths.2010 <- filter(year = 2010)
deaths.2010 <- filter(pneumonia.vs.all, year = 2010)
deaths.2010 <- filter(pneumonia.vs.all, year == 2010)
deaths.2010 <- filter(pneumonia.vs.all, Year == 2010)
View(deaths.2010)
View(deaths.2010)
deaths.2011 <- filter(pneumonia.vs.all, Year == 2011)
deaths.2014 <- filter(pneumonia.vs.all, Year == 2014)
deaths.2015 <- filter(pneumonia.vs.all, Year == 2015)
deaths.2010 <- filter(pneumonia.vs.all, Year == 2010)
deaths.2011 <- filter(pneumonia.vs.all, Year == 2011)
deaths.2012 <- filter(pneumonia.vs.all, Year == 2012)
deaths.2013 <- filter(pneumonia.vs.all, Year == 2013)
deaths.2014 <- filter(pneumonia.vs.all, Year == 2014)
deaths.2015 <- filter(pneumonia.vs.all, Year == 2015)
deaths.2016 <- filter(pneumonia.vs.all, Year == 2016)
range.2010 <- range(deaths.2010$All.Deaths, na.rm = TRUE)
View(range)
View(range.2010)
print(range.2010)
range.2010 <- filter(deaths.2010$All.Deaths = max(deaths.2010))
range.2010 <- filter(deaths.2010$All.Deaths = max(deaths.2010$All.Deaths))
range.2010 <- filter(deaths.2010$All.Deaths == max(deaths.2010$All.Deaths))
range.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths))
View(range.2010)
range.2010 <- deaths.2010 %>% filter(max(All.Deaths))
range.2010 <- deaths.2010 %>% filter(All.Deaths = max(All.Deaths))
range.2010 <- deaths.2010 %>% summarise(All.Deaths == max(All.Deaths))
range.2010 <- deaths.2010 %>% summarize(max = max(All.Deaths))
View(range.2010)
range.2010 <- deaths.2010 %>% summarize(max = max(All.Deaths, na.rm = TRUE),)
range.2010 <- deaths.2010 %>% summarize(max = max(All.Deaths, na.rm = TRUE))
View(range.2010)
range.2010 <- deaths.2010 %>% filter(max = max(All.Deaths, na.rm = TRUE))
range.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
View(range.2010)
range.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE), All.Deaths
== min(All.Deaths, na.rm = TRUE))
View(range.2010)
range.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE), All.Deaths == min(All.Deaths, na.rm = TRUE))
View(range.2010)
max.2010 <- deaths.2010 %>% filter(All.Deaths == range(All.Deaths, na.rm = TRUE))
View(range.2010)
max.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE)) %>%
filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
View(range.2010)
min.2010  deaths.2010 %>%  filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
min.2010 <- deaths.2010 %>%  filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
View(max.2010)
View(min.2010)
full_join(max.2010, min.2010)
maxmin.2010 <- full_join(max.2010, min.2010)
View(maxmin.2010)
View(estimate.long)
View(estimate.long)
estimates <- estimate.long %>% select(Year, City, STNAME, ESTIMATE)
View(estimates)
ui<- fluidPage(
titlePanel("Mortality Rates in the Unite States from 2010-2016")
)
shinyApp(ui, server)
server <- function(input, output){
}
shinyApp(ui, server)
View(cities)
# Getting the city names
cities <- pneumonia.vs.all$City
View(cities)
# Getting the city names
cities <- unique(pneumonia.vs.all$City)
View(cities)
runApp()
runApp()
runApp()
runApp()
runApp()
library("dplyr")
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
##########################
# DATA WRANGLING SECTION #
##########################
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/population_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Getting the city names
cities <- unique(pneumonia.vs.all$City)
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
# Spreading of years in "population" dataframe.
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016")
estimates <- estimate.long %>% select(Year, City, STNAME, ESTIMATE)
# Making a new dataframe that joins by city
city.join <- inner_join(pneumonia.vs.all, estimate.long, by = "City")
# Filtering for lowest and highest death rates
deaths.2010 <- filter(pneumonia.vs.all, Year == 2010)
deaths.2011 <- filter(pneumonia.vs.all, Year == 2011)
deaths.2012 <- filter(pneumonia.vs.all, Year == 2012)
deaths.2013 <- filter(pneumonia.vs.all, Year == 2013)
deaths.2014 <- filter(pneumonia.vs.all, Year == 2014)
deaths.2015 <- filter(pneumonia.vs.all, Year == 2015)
deaths.2016 <- filter(pneumonia.vs.all, Year == 2016)
# Max & Min Deaths for each year
#2010
max.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2010 <- deaths.2010 %>%  filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2010 <- full_join(max.2010, min.2010)
# 2011
max.2011 <- deaths.2011 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2011 <- deaths.2011 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2011 <- full_join(max.2011, min.2011)
# 2012
max.2012 <- deaths.2012 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2012 <- deaths.2012 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2012 <- full_join(max.2012, min.2012)
# 2013
max.2013 <- deaths.2013 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2013 <- deaths.2013 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2013 <- full_join(max.2013, min.2013)
# 2014
max.2014 <- deaths.2014 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2014 <- deaths.2014 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2014 <- full_join(max.2014, min.2014)
# 2015
max.2012 <- deaths.2015 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2012 <- deaths.2015 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2012 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2016 <- deaths.2016 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2016 <- full_join(max.2016, min.2016)
# Which age/year group had the most deaths combined?
# UI Code
ui<- fluidPage(
titlePanel("Mortality Rates in the Unite States from 2010-2016"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = 'city',
label = 'Cities',
choices = cities
),
radioButtons(
inputId = "age",
label = "Age Range",
choices = 1
)
)
),
mainPanel(tabsetPanel(
))
)
# Server Code
server <- function(input, output){
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# 2015
max.2015 <- deaths.2015 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2015 <- deaths.2015 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2015 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
library("dplyr")
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
##########################
# DATA WRANGLING SECTION #
##########################
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/population_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Getting the city names
cities <- unique(pneumonia.vs.all$City)
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
# Spreading of years in "population" dataframe.
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016")
estimates <- estimate.long %>% select(Year, City, STNAME, ESTIMATE)
# Making a new dataframe that joins by city
city.join <- inner_join(pneumonia.vs.all, estimate.long, by = "City")
# Filtering for lowest and highest death rates
deaths.2010 <- filter(pneumonia.vs.all, Year == 2010)
deaths.2011 <- filter(pneumonia.vs.all, Year == 2011)
deaths.2012 <- filter(pneumonia.vs.all, Year == 2012)
deaths.2013 <- filter(pneumonia.vs.all, Year == 2013)
deaths.2014 <- filter(pneumonia.vs.all, Year == 2014)
deaths.2015 <- filter(pneumonia.vs.all, Year == 2015)
deaths.2016 <- filter(pneumonia.vs.all, Year == 2016)
# Max & Min Deaths for each year
#2010
max.2010 <- deaths.2010 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2010 <- deaths.2010 %>%  filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2010 <- full_join(max.2010, min.2010)
# 2011
max.2011 <- deaths.2011 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2011 <- deaths.2011 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2011 <- full_join(max.2011, min.2011)
# 2012
max.2012 <- deaths.2012 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2012 <- deaths.2012 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2012 <- full_join(max.2012, min.2012)
# 2013
max.2013 <- deaths.2013 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2013 <- deaths.2013 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2013 <- full_join(max.2013, min.2013)
# 2014
max.2014 <- deaths.2014 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2014 <- deaths.2014 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2014 <- full_join(max.2014, min.2014)
# 2015
max.2015 <- deaths.2015 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2015 <- deaths.2015 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2015 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(All.Deaths == max(All.Deaths, na.rm = TRUE))
min.2016 <- deaths.2016 %>% filter(All.Deaths == min(All.Deaths, na.rm = TRUE))
maxmin.2016 <- full_join(max.2016, min.2016)
# Which age/year group had the most deaths combined?
# UI Code
ui<- fluidPage(
titlePanel("Mortality Rates in the Unite States from 2010-2016"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = 'city',
label = 'Cities',
choices = cities
),
radioButtons(
inputId = "age",
label = "Age Range",
choices = 1
)
))
)
mainPanel(tabsetPanel(
tabsetPanel(
id = "tabset",
type = "tabs",
tabPanel("Background Information", textOutput("BackInfo")),
tabPanel("Table", tableOutput("table"))
)
))
# Server Code
server <- function(input, output){
}
shinyApp(ui, server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Getting the city names
cities <- order(unique(pneumonia.vs.all$City))
View(cities)
View(deaths)
infants <- deaths %>% group_by(Year)
View(infants)
infants <- deaths %>% filter(Year > 2009) %>% group_by(Year)
View(infants)
age.groups <- deaths %>% filter(Year > 2009) %>% group_by(Year)
View(age.groups)
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
View(age.groups)
colnames(age.groups)[9:13] <- c(" < 1", "1-24", "25-44", "45-64", "65+")
colnames(age.groups)[9:13] <- c(" <1", "1-24", "25-44", "45-64", "65+")
colnames(age.groups)[9:13] <- c(" <1", "1-24", "25-44", "45-64", "65+")
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
