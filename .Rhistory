min(Mortality.Rate,
na.rm = TRUE))
maxmin.2014 <- full_join(max.2014, min.2014)
# 2015
max.2015 <- deaths.2015 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2015 <- deaths.2015 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2015 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2016 <- deaths.2016 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2016 <- full_join(max.2016, min.2016)
# Which age/year group had the most deaths combined?
age.groups <- deaths %>% filter(Year > 2009) %>% group_by(Year)
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
# UI Code
View(age.groups)
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
age.group <- gather(age.groups,
key = age.group,
value = agegroup.deaths, "<1", "1-24", "25-44", "45-64", "65+")
age.ranges <- unique(age.group$age.group)
# UI Code
ui<- fluidPage(
titlePanel("Mortality Rates in the United States from 2010-2016"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = 'year', label = 'Year', min = 2010,
max = 2016, value = 2010),
selectInput(
inputId = 'city',
label = 'Cities',
choices = city.names
),
radioButtons(
inputId = "age",
label = "Age Range",
choices = age.ranges
)
),
mainPanel(
tabsetPanel(
id = "tabset",
type = "tabs",
tabPanel("Background Information", textOutput("BackInfo")),
tabPanel("Map", plotOutput("map")),
tabPanel("Table", tableOutput("table"))
)
)
))
# Server Code
server <- function(input, output){
}
shinyApp(ui, server)
View(city.population)
city.population <- city.population %>% group_by(City) %>% group_by(Year.x) %>%
mutate("Mortalit.Rate" = paste0(sum(All.Deaths) / ESTIMATE *
100, "%"))
View(city.population)
city.population <- city.population %>% group_by(Year.x) %>% group_by(City) %>%
mutate("Mortal.Rate" = paste0(sum(All.Deaths) / ESTIMATE *
100, "%"))
View(city.population)
deaths.2010 <- pneumonia.deaths %>% filter(Year.x == 2010) %>%
group_by(City) %>% mutate("Mortal.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
View(deaths.2010)
library("dplyr")
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
##########################
# DATA WRANGLING SECTION #
##########################
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/census_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Getting the city names
cities <- (unique(pneumonia.vs.all$City))
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
# Spreading of years in "population" dataframe.
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016")
estimates <- estimate.long %>% select(Year, City, STNAME, ESTIMATE)
# Making a new dataframe that joins by city
city.join <- left_join(pneumonia.vs.all, estimate.long, by = "City")
city.population <- city.join %>% filter(Year.x == Year.y)
city.names <- unique(city.population$City)
city.range <- range(city.population$Year.x)
city.population <- mutate(city.population, "Pneumonia.and.Influenza.Ratio" =
paste0(Pneumonia.and.Influenza.Deaths /
All.Deaths * 100, "%" ))
# Filtering for lowest and highest death rates
pneumonia.deaths <- city.population %>% select(Year.x, WEEK, City,
Pneumonia.and.Influenza.Deaths,
All.Deaths, STNAME, ESTIMATE,
Pneumonia.and.Influenza.Ratio)
deaths.2010 <- pneumonia.deaths %>% filter(Year.x == 2010) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2011 <- pneumonia.deaths %>% filter(Year.x == 2011) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2012 <- pneumonia.deaths %>% filter(Year.x == 2012) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2013 <- pneumonia.deaths %>% filter(Year.x == 2013) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2014 <- pneumonia.deaths %>% filter(Year.x == 2014) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2015 <- pneumonia.deaths %>% filter(Year.x == 2015) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
# Max & Min Deaths for each year
#2010
max.2010 <- deaths.2010 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2010 <- deaths.2010 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2010 <- full_join(max.2010, min.2010)
# 2011
max.2011 <- deaths.2011 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2011 <- deaths.2011 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2011 <- full_join(max.2011, min.2011)
# 2012
max.2012 <- deaths.2012 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2012 <- deaths.2012 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2012 <- full_join(max.2012, min.2012)
# 2013
max.2013 <- deaths.2013 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2013 <- deaths.2013 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2013 <- full_join(max.2013, min.2013)
# 2014
max.2014 <- deaths.2014 %>% group_by(City) %>% filter(Mortality.Rate ==
max(Mortality.Rate,
na.rm = TRUE))
min.2014 <- deaths.2014 %>% group_by(City) %>% filter(Mortality.Rate ==
min(Mortality.Rate,
na.rm = TRUE))
maxmin.2014 <- full_join(max.2014, min.2014)
# 2015
max.2015 <- deaths.2015 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2015 <- deaths.2015 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2015 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2016 <- deaths.2016 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2016 <- full_join(max.2016, min.2016)
# Which age/year group had the most deaths combined?
age.groups <- deaths %>% filter(Year > 2009) %>% group_by(Year)
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
# UI Code
View(age.groups)
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
age.group <- gather(age.groups,
key = age.group,
value = agegroup.deaths, "<1", "1-24", "25-44", "45-64", "65+")
age.ranges <- unique(age.group$age.group)
# UI Code
ui<- fluidPage(
titlePanel("Mortality Rates in the United States from 2010-2016"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = 'year', label = 'Year', min = 2010,
max = 2016, value = 2010),
selectInput(
inputId = 'city',
label = 'Cities',
choices = city.names
),
radioButtons(
inputId = "age",
label = "Age Range",
choices = age.ranges
)
),
mainPanel(
tabsetPanel(
id = "tabset",
type = "tabs",
tabPanel("Background Information", textOutput("BackInfo")),
tabPanel("Map", plotOutput("map")),
tabPanel("Table", tableOutput("table"))
)
)
))
# Server Code
server <- function(input, output){
}
shinyApp(ui, server)
View(city.population)
View(deaths.2010)
View(maxmin.2010)
#2010
max.2010 <- deaths.2010 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
#2010
max.2010 <- deaths.2010 %>% unique(filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE)))
View(deaths.2010)
#2010
max.2010 <- deaths.2010 %>% unique(filter(deaths.2010, Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE)))
#2010
max.2010 <- unique(filter(deaths.2010, Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE)))
View(max.2010)
#2010
max.2010 <- unique(filter(deaths.2010, Mortality.Rate == max(Mortality.Rate, na.rm = TRUE)))
View(deaths.2010)
library("dplyr")
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
View(deaths.2016)
#2010
max.2010 <- unique(filter(deaths.2010, Mortality.Rate == max(Mortality.Rate, na.rm = TRUE)))
#2010
max.2010 <- deaths.2010 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
#2010
max.2010 <- deaths.2010 %>% group_by(City) %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
View(max.2010)
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% summarize(sum = sum(All.Deaths), Mortality.Rate =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% mutate(sum = sum(All.Deaths), Mortality.Rate =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%")) %>%
summarize(All.Deaths = mean(All.Deaths), Mortality.Rate = mean(Mortality.Rate))
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% mutate(sum = sum(All.Deaths), Mortality.Rate =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%")) %>%
summarize(All.Deaths = mean(All.Deaths), Mortality.Rate = mean(Mortality.Rate))
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% mutate(sum = sum(All.Deaths), Death.Rate =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%")) %>%
summarize(Total.Deaths = mean(All.Deaths), Mortality.Rate = mean(Death.Rate))
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% mutate(sum = sum(All.Deaths), Death.Rate =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%"))
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% mutate(sum = sum(All.Deaths), Death.Rate =
paste0(sum(All.Deaths) / ESTIMATE * 100, "%")) %>%
summarize(Total.Deaths = mean(All.Deaths), Mortality.Rate = mean(Death.Rate))
library("dplyr")
library("maps")
library("tidyr")
library("sp")
library("shiny")
library("ggplot2")
##########################
# DATA WRANGLING SECTION #
##########################
# Reading in data files
deaths <- read.csv('data/Deaths_in_122_US_cities.csv', stringsAsFactors = FALSE, fileEncoding = "UTF-8-BOM")
population <- read.csv('data/census_info.csv', stringsAsFactors = FALSE)
# Creating a new dataframe with the needed columns for analysis.
pneumonia.vs.all <- deaths %>% select(Year, WEEK, City, Pneumonia.and.Influenza.Deaths, All.Deaths) %>%
filter(Year > 2009)
# Getting the city names
cities <- (unique(pneumonia.vs.all$City))
# Changing of column name called "NAME" to "City" to help innerjoin the two dataframes (deaths & population)"
colnames(population)[9] <- "City"
# Spreading of years in "population" dataframe.
colnames(population)[13:19] <- 2010:2016
estimate.long <- gather(population,
key = Year,
value = ESTIMATE, "2010", "2011", "2012",
"2013", "2014", "2015", "2016")
estimates <- estimate.long %>% select(Year, City, STNAME, ESTIMATE)
# Making a new dataframe that joins by city
city.join <- left_join(pneumonia.vs.all, estimate.long, by = "City")
city.population <- city.join %>% filter(Year.x == Year.y)
city.names <- unique(city.population$City)
city.range <- range(city.population$Year.x)
city.population <- mutate(city.population, "Pneumonia.and.Influenza.Ratio" =
paste0(Pneumonia.and.Influenza.Deaths /
All.Deaths * 100, "%" ))
# Filtering for lowest and highest death rates
pneumonia.deaths <- city.population %>% select(Year.x, WEEK, City,
Pneumonia.and.Influenza.Deaths,
All.Deaths, STNAME, ESTIMATE,
Pneumonia.and.Influenza.Ratio)
deaths.2010 <- pneumonia.deaths %>% filter(Year.x == 2010) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100))
deaths.2011 <- pneumonia.deaths %>% filter(Year.x == 2011) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100))
deaths.2012 <- pneumonia.deaths %>% filter(Year.x == 2012) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100))
deaths.2013 <- pneumonia.deaths %>% filter(Year.x == 2013) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100))
deaths.2014 <- pneumonia.deaths %>% filter(Year.x == 2014) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100))
deaths.2015 <- pneumonia.deaths %>% filter(Year.x == 2015) %>%
group_by(City) %>% mutate("Mortality.Rate" =
paste0(sum(All.Deaths) / ESTIMATE * 100))
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% mutate(sum = sum(All.Deaths), Mortality.Rate =
paste0(sum(All.Deaths) / ESTIMATE * 100))
# Max & Min Deaths for each year
#2010
max.2010 <- deaths.2010 %>% group_by(City) %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2010 <- deaths.2010 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2010 <- full_join(max.2010, min.2010)
# 2011
max.2011 <- deaths.2011 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2011 <- deaths.2011 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2011 <- full_join(max.2011, min.2011)
# 2012
max.2012 <- deaths.2012 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2012 <- deaths.2012 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2012 <- full_join(max.2012, min.2012)
# 2013
max.2013 <- deaths.2013 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2013 <- deaths.2013 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2013 <- full_join(max.2013, min.2013)
# 2014
max.2014 <- deaths.2014 %>% group_by(City) %>% filter(Mortality.Rate ==
max(Mortality.Rate,
na.rm = TRUE))
min.2014 <- deaths.2014 %>% group_by(City) %>% filter(Mortality.Rate ==
min(Mortality.Rate,
na.rm = TRUE))
maxmin.2014 <- full_join(max.2014, min.2014)
# 2015
max.2015 <- deaths.2015 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2015 <- deaths.2015 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2015 <- full_join(max.2015, min.2015)
# 2016
max.2016 <- deaths.2016 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2016 <- deaths.2016 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
maxmin.2016 <- full_join(max.2016, min.2016)
# Which age/year group had the most deaths combined?
age.groups <- deaths %>% filter(Year > 2009) %>% group_by(Year)
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
# UI Code
View(age.groups)
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
age.group <- gather(age.groups,
key = age.group,
value = agegroup.deaths, "<1", "1-24", "25-44", "45-64", "65+")
age.ranges <- unique(age.group$age.group)
# UI Code
ui<- fluidPage(
titlePanel("Mortality Rates in the United States from 2010-2016"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = 'year', label = 'Year', min = 2010,
max = 2016, value = 2010),
selectInput(
inputId = 'city',
label = 'Cities',
choices = city.names
),
radioButtons(
inputId = "age",
label = "Age Range",
choices = age.ranges
)
),
mainPanel(
tabsetPanel(
id = "tabset",
type = "tabs",
tabPanel("Background Information", textOutput("BackInfo")),
tabPanel("Map", plotOutput("map")),
tabPanel("Table", tableOutput("table"))
)
)
))
# Server Code
server <- function(input, output){
}
shinyApp(ui, server)
View(deaths.2016)
View(age.group)
remove(deaths.2016)
deaths.2016 <- pneumonia.deaths %>% filter(Year.x == 2016) %>%
group_by(City) %>% mutate(Mortality.Rate =
sum(All.Deaths) / ESTIMATE * 100)
# 2016
max.2016 <- deaths.2016 %>% filter(Mortality.Rate == max(Mortality.Rate,
na.rm = TRUE))
min.2016 <- deaths.2016 %>% filter(Mortality.Rate == min(Mortality.Rate,
na.rm = TRUE))
View(age.group)
ages.2010 <- age.group %>% filter(Year == 2010) %>% group_by(age.group) %>%
mutate(sum = sum(agegroup.deaths)) %>% select(Year, age.group, agegroup.deaths, sum)
View(ages.2010)
ages.2010 <- age.group %>% filter(Year == 2010) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths))
View(ages.2010)
ages.2010 <- age.group %>% filter(Year == 2010) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(ages.2010)
ages.2011 <- age.group %>% filter(Year == 2011) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2012 <- age.group %>% filter(Year == 2012) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2013 <- age.group %>% filter(Year == 2013) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2014 <- age.group %>% filter(Year == 2014) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2015 <- age.group %>% filter(Year == 2015) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
ages.2016 <- age.group %>% filter(Year == 2016) %>% group_by(age.group) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(ages.2010)
View(ages.2011)
View(ages.2010)
View(ages.2012)
View(ages.2013)
View(ages.2014)
View(ages.2015)
View(ages.2016)
smallest.ages <- age.group %>% filter(age.group == ">1") %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(smallest.ages)
smallest.ages <- age.group %>% filter(age.group == >1) %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
smallest.ages <- age.group %>% filter(age.group == '>1') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
smallest.ages <- age.group %>% filter(age.group == '>1') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
colnames(age.groups)[9:13] <- c("<1years", "1-24years", "25-44years", "45-64years", "65+years")
age.group <- gather(age.groups,
key = age.group,
value = agegroup.deaths, "<1years", "1-24years", "25-44years", "45-64years", "65+years")
View(age.group)
smallest.ages <- age.group %>% filter(age.group == '<1years') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(smallest.ages)
age.group <- gather(age.groups,
key = age.group,
value = agegroup.deaths, "<1", "1-24", "25-44", "45-64", "65+")
colnames(age.groups)[9:13] <- c("<1", "1-24", "25-44", "45-64", "65+")
age.group <- gather(age.groups,
key = age.group,
value = agegroup.deaths, "<1", "1-24", "25-44", "45-64", "65+")
smallest.ages <- age.group %>% filter(age.group == '<1') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(smallest.ages)
first.ages <- age.group %>% filter(age.group == '<1') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
second.ages <- age.group %>% filter(age.group == '1-24') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(second.ages)
third.ages <- age.group %>% filter(age.group == '25-44') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(third.ages)
fourth.ages <- age.group %>% filter(age.group == '45-64') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(fourth.ages)
fifth.ages <- age.group %>% filter(age.group == '65+') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(fifth.ages)
View(fifth.ages)
fourth.ages <- age.group %>% filter(age.group == '45-64') %>% group_by(Year) %>%
summarize(sum = sum(agegroup.deaths, na.rm = TRUE))
View(fourth.ages)
runApp()
